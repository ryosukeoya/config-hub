[
  {
    "command": "-extension.vim_ctrl+p",
    "key": "ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "-extension.vim_ctrl+j",
    "key": "ctrl+j",
    "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+b",
    "key": "ctrl+b",
    "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_ctrl+w",
    "key": "ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+t",
    "key": "ctrl+t",
    "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
  },
  {
    "command": "workbench.panel.markers.view.focus",
    "key": "ctrl+k ctrl+p"
  },
  {
    "command": "workbench.view.extension.test",
    "key": "ctrl+shift+t"
  },
  {
    "command": "-extension.vim_ctrl+f",
    "key": "ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_ctrl+down",
    "key": "ctrl+down",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "workbench.action.terminal.focus",
    "key": "ctrl+t"
  },
  {
    "command": "-workbench.action.terminal.focus",
    "key": "ctrl+down",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "command": "-workbench.action.showAllSymbols",
    "key": "ctrl+t"
  },
  {
    "command": "cursorUp",
    "key": "ctrl+p",
    "when": "terminalFocus"
  },
  {
    "command": "cursorDown",
    "key": "ctrl+n",
    "when": "notebookEditorFocused | terminalFocus"
  },
  {
    "command": "cursorLeft",
    "key": "ctrl+b",
    "when": "terminalFocus"
  },
  {
    "command": "cursorEnd",
    "key": "ctrl+e",
    "when": "terminalFocus"
  },
  {
    "command": "deleteRight",
    "key": "ctrl+d",
    "when": "terminalFocus"
  },
  {
    "command": "deleteLeft",
    "key": "ctrl+h",
    "when": "terminalFocus"
  },
  {
    "command": "deleteAllRight",
    "key": "ctrl+k",
    "when": "terminalFocus"
  },
  {
    "args": {
      "text": "\n"
    },
    "command": "type",
    "key": "ctrl+m",
    "when": "terminalFocus"
  },
  {
    "command": "-workbench.action.files.newUntitledFile",
    "key": "ctrl+n"
  },
  {
    "command": "cursorEnd",
    "key": "end",
    "when": "textInputFocus"
  },
  {
    "command": "-list.selectAll",
    "key": "ctrl+a",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "command": "cursorHome",
    "key": "ctrl+a",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
    "key": "ctrl+p",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "key": "ctrl+shift+e",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "key": "ctrl+shift+p",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "key": "ctrl+p",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "-extension.vim_ctrl+n",
    "key": "ctrl+n",
    "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "workbench.view.scm",
    "key": "ctrl+shift+s",
    "when": "workbench.scm.active"
  },
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g",
    "when": "workbench.scm.active"
  },
  {
    "command": "-extension.vim_ctrl+k",
    "key": "ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+m",
    "key": "ctrl+m",
    "when": "editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "-workbench.action.toggleMaximizeEditorGroup",
    "key": "ctrl+k ctrl+m",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  },
  {
    "command": "workbench.action.editor.changeLanguageMode",
    "key": "ctrl+k m",
    "when": "!notebookEditorFocused"
  },
  {
    "command": "-workbench.action.editor.changeLanguageMode",
    "key": "ctrl+k m",
    "when": "!notebookEditorFocused"
  },
  {
    "command": "workbench.action.toggleMaximizedPanel",
    "key": "ctrl+k ctrl+m"
  },
  {
    "command": "-git.revertSelectedRanges",
    "key": "ctrl+k ctrl+r",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "command": "workbench.action.reloadWindow",
    "key": "ctrl+k r"
  },
  {
    "command": "-workbench.action.reloadWindow",
    "key": "ctrl+r",
    "when": "isDevelopment"
  },
  {
    "command": "workbench.action.showAllEditors",
    "key": "ctrl+k p"
  },
  {
    "command": "-workbench.action.showAllEditors",
    "key": "ctrl+k ctrl+p"
  },
  {
    "command": "workbench.panel.output.focus",
    "key": "ctrl+k ctrl+o"
  },
  {
    "command": "-extension.vim_ctrl+pagedown",
    "key": "ctrl+pagedown",
    "when": "editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"
  },
  {
    "command": "workbench.action.nextEditor",
    "key": "ctrl+oem_7"
  },
  {
    "command": "-workbench.action.nextEditor",
    "key": "ctrl+pagedown"
  },
  {
    "command": "workbench.action.previousEditor",
    "key": "ctrl+oem_1"
  },
  {
    "command": "-workbench.action.previousEditor",
    "key": "ctrl+pageup"
  },
  {
    "command": "-workbench.action.splitEditorRight",
    "key": "ctrl+k ctrl+oem_5"
  },
  {
    "command": "markdown.showPreviewToSide",
    "key": "ctrl+k ctrl+v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "-markdown.showPreviewToSide",
    "key": "ctrl+k v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "-git.unstageSelectedRanges",
    "key": "ctrl+k ctrl+n",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "command": "workbench.action.splitEditorDown",
    "key": "ctrl+k ctrl+n"
  },
  {
    "command": "-workbench.action.splitEditorDown",
    "key": "ctrl+k ctrl+oem_5"
  },
  {
    "command": "-editor.toggleFold",
    "key": "ctrl+k ctrl+l",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "workbench.action.moveActiveEditorGroupDown",
    "key": "ctrl+k j"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupDown",
    "key": "ctrl+k down"
  },
  {
    "command": "workbench.action.moveActiveEditorGroupRight",
    "key": "ctrl+k l"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupRight",
    "key": "ctrl+k right"
  },
  {
    "command": "workbench.action.moveEditorRightInGroup",
    "key": "ctrl+k l"
  },
  {
    "command": "-workbench.action.moveEditorRightInGroup",
    "key": "ctrl+shift+pagedown"
  },
  {
    "command": "workbench.action.moveActiveEditorGroupUp",
    "key": "ctrl+k k"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupUp",
    "key": "ctrl+k up"
  },
  {
    "command": "workbench.action.moveActiveEditorGroupLeft",
    "key": "ctrl+k h"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupLeft",
    "key": "ctrl+k left"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+w",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.w && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+w",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.w && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+j",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.j && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+j",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.j && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+s",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.s && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+s",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.s && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-markdown.extension.onOutdentLines",
    "key": "ctrl+oem_4",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "command": "-vscode-neovim.ctrl-b",
    "key": "ctrl+b",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.b && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+f",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.f && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.ctrl-f",
    "key": "ctrl+f",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.f && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "ctrl+w",
    "when": "!editorTextFocus && !filesExplorerFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "command": "-workbench.action.closeActiveEditor",
    "key": "ctrl+w q",
    "when": "!editorTextFocus && !filesExplorerFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+z",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.z && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+z",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.z && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "args": {
      "id": "cSpell",
      "value": [
        {
          "cSpell.enabled": true
        },
        {
          "cSpell.enabled": false
        }
      ]
    },
    "command": "toggle",
    "key": "ctrl+e ctrl+p",
    "when": "editorTextFocus && !terminalFocus"
  },
  {
    "command": "-editor.action.outdentLines",
    "key": "ctrl+oem_4",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.indentLines",
    "key": "ctrl+oem_6",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "extension.vim_ctrl+v",
    "key": "ctrl+shift+win+v",
    "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl && !terminal.Focus"
  },
  {
    "command": "-extension.vim_ctrl+v",
    "key": "ctrl+v",
    "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"
  },
  {
    "command": "filesExplorer.paste",
    "key": "ctrl+v",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "workbench.action.terminal.focusPrevious",
    "key": "ctrl+oem_1",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "-workbench.action.terminal.focusPrevious",
    "key": "ctrl+pageup",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "-workbench.action.terminal.focusPreviousPane",
    "key": "alt+up",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.killEditor",
    "key": "ctrl+shift+w",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.killEditor",
    "key": "ctrl+w",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusNextPane",
    "key": "ctrl+right",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusNextPane",
    "key": "alt+down",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusNext",
    "key": "ctrl+oem_7",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "-workbench.action.terminal.focusNext",
    "key": "ctrl+pagedown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.focusFind",
    "key": "ctrl+k ctrl+f",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusFind",
    "key": "ctrl+f",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "command": "markdown.extension.editing.toggleBold",
    "key": "ctrl+k ctrl+b",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "command": "-markdown.extension.editing.toggleBold",
    "key": "ctrl+b",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "command": "workbench.panel.testResults.view.focus",
    "key": "ctrl+k ctrl+t"
  },
  {
    "command": "-workbench.action.selectTheme",
    "key": "ctrl+k ctrl+t"
  },
  {
    "command": "workbench.action.terminal.scrollDown",
    "key": "ctrl+win+j",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "-workbench.action.terminal.scrollDown",
    "key": "ctrl+alt+pagedown",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "workbench.action.terminal.scrollUp",
    "key": "ctrl+win+k",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "-workbench.action.terminal.scrollUp",
    "key": "ctrl+alt+pageup",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "workbench.action.terminal.focus",
    "key": "ctrl+k ctrl+t"
  },
  {
    "command": "workbench.debug.action.focusRepl",
    "key": "ctrl+k ctrl+d"
  },
  {
    "command": "gitlens.views.graph.focus",
    "key": "ctrl+k ctrl+g"
  },
  {
    "command": "~remote.forwardedPorts.focus",
    "key": "ctrl+k ctrl+r"
  },
  {
    "command": "workbench.action.problems.focus",
    "key": "ctrl+k ctrl+p"
  },
  {
    "command": "gitlens.views.home.focus",
    "key": "ctrl+shift+g"
  },
  {
    "command": "github:login.focus",
    "key": "ctrl+shift+p"
  },
  {
    "command": "dockerContainers.focus",
    "key": "ctrl+shift+c"
  },
  {
    "command": "gitlens.views.commitDetails.focus",
    "key": "ctrl+shift+i"
  },
  {
    "command": "targetsWsl.focus",
    "key": "ctrl+shift+r"
  },
  {
    "command": "makefile.outline.focus",
    "key": "ctrl+shift+m"
  },
  {
    "command": "github-actions.empty-view.focus",
    "key": "ctrl+shift+a"
  },
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+n",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "-selectNextSuggestion",
    "key": "ctrl+down",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "list.focusDown",
    "key": "ctrl+n",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.focusDown",
    "key": "j",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.focusUp",
    "key": "ctrl+p",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.focusUp",
    "key": "k",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+p",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "-selectPrevSuggestion",
    "key": "ctrl+up",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "-extension.vim_winCtrlQ",
    "key": "ctrl+q",
    "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
  },
  {
    "command": "workbench.action.quickOpenSelectNext",
    "key": "ctrl+n",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+p",
    "when": "inQuickOpen"
  },
  {
    "command": "outline.focus",
    "key": "ctrl+k ctrl+u"
  },
  {
    "command": "workbench.action.closeAuxiliaryBar",
    "key": "ctrl+k ctrl+c"
  },
  {
    "command": "workbench.action.zoomReset",
    "key": "ctrl+0"
  },
  {
    "command": "-workbench.action.zoomReset",
    "key": "ctrl+numpad0"
  },
  {
    "command": "-extension.vim_ctrl+o",
    "key": "ctrl+o",
    "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
  },
  {
    "command": "workbench.action.gotoSymbol",
    "key": "ctrl+e ctrl+o",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown && !terminalFocus"
  },
  {
    "command": "-workbench.action.gotoSymbol",
    "key": "ctrl+shift+o",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "command": "extension.vim_ctrl+c",
    "key": "ctrl+c",
    "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+c",
    "key": "ctrl+c",
    "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
  },
  {
    "command": "todo-tree-view.focus",
    "key": "ctrl+shift+b"
  },
  {
    "command": "toggleFindWholeWord",
    "key": "alt+d",
    "when": "editorFocus"
  },
  {
    "command": "-toggleFindWholeWord",
    "key": "alt+w",
    "when": "editorFocus"
  },
  {
    "command": "toggleSearchWholeWord",
    "key": "alt+d",
    "when": "searchViewletFocus"
  },
  {
    "command": "-toggleSearchWholeWord",
    "key": "alt+w",
    "when": "searchViewletFocus"
  },
  {
    "command": "keybindings.editor.recordSearchKeys",
    "key": "alt+c",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "command": "-keybindings.editor.recordSearchKeys",
    "key": "alt+k",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "command": "keybindings.editor.toggleSortByPrecedence",
    "key": "alt+d",
    "when": "inKeybindings"
  },
  {
    "command": "-keybindings.editor.toggleSortByPrecedence",
    "key": "alt+p",
    "when": "inKeybindings"
  },
  {
    "command": "workbench.action.terminal.focusTabs",
    "key": "ctrl+shift+oem_3",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.action.terminal.focusTabs",
    "key": "ctrl+shift+oem_5",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "ctrl+a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "ctrl+r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-renameFile",
    "key": "f2",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "moveFileToTrash",
    "key": "delete",
    "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "ctrl+g ctrl+d",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "command": "-editor.action.revealDefinition",
    "key": "f12",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "command": "editor.action.goToReferences",
    "key": "ctrl+g ctrl+r",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "-editor.action.goToReferences",
    "key": "shift+f12",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "editor.action.goToTypeDefinition",
    "key": "ctrl+g ctrl+t"
  },
  {
    "command": "workbench.action.switchWindow",
    "key": "ctrl+e ctrl+w",
    "when": "!terminalFocus"
  },
  {
    "command": "workbench.action.terminal.new",
    "key": "ctrl+shift+oem_3",
    "when": "terminalProcessSupported && terminalFocus"
  },
  {
    "command": "-workbench.action.terminal.new",
    "key": "ctrl+shift+oem_3",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "workbench.action.terminal.kill",
    "key": "delete",
    "when": "terminalFocus"
  },
  {
    "command": "-extension.vim_ctrl+d",
    "key": "ctrl+d",
    "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
  },
  {
    "command": "editor.action.addSelectionToNextFindMatch",
    "key": "ctrl+e ctrl+d",
    "when": "editorFocus && !terminalFocus"
  },
  {
    "command": "-editor.action.addSelectionToNextFindMatch",
    "key": "ctrl+d",
    "when": "editorFocus"
  },
  {
    "command": "references-view.findReferences",
    "key": "ctrl+e ctrl+r",
    "when": "editorHasReferenceProvider && !terminalFocus"
  },
  {
    "command": "-references-view.findReferences",
    "key": "shift+alt+f12",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "backspace",
    "command": "-extension.vim_backspace",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "ctrl+e ctrl+l",
    "command": "workbench.action.quickOpenLeastRecentlyUsedEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+d",
    "command": "list.focusPageDown",
    "when": "listFocus && !inputFocus && !terminalFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "ctrl+shift+1",
    "command": "workbench.action.firstEditorInGroup"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "alt+left",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "workbench.action.moveEditorToRightGroup"
  },
  {
    "key": "ctrl+k ctrl+h",
    "command": "workbench.action.moveEditorToLeftGroup"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "workbench.action.moveEditorToBelowGroup"
  },
  {
    "key": "ctrl+k ctrl+k",
    "command": "workbench.action.moveEditorToAboveGroup"
  },
  {
    "key": "ctrl+k ctrl+e",
    "command": "markdown.extension.editing.toggleStrikethrough",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ |!terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+oem_7",
    "command": "workbench.action.positionPanelRight",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+oem_1",
    "command": "workbench.action.positionPanelBottom",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+k ctrl+u",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "tab",
    "command": "extension.vim_tab",
    "when": "!terminalFocus && editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "tab",
    "command": "-extension.vim_tab",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.quickOpen",
    "when": " !terminalFocus"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+e ctrl+q",
    "command": "sqltools.bookmarkSelection",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+q",
    "command": "-sqltools.bookmarkSelection",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+r",
    "command": "sqltools.deleteBookmark",
    "when": "!config.sqltools.disableChordKeybindings && !terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+r",
    "command": "-sqltools.deleteBookmark",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+a",
    "command": "sqltools.runFromBookmarks",
    "when": "!config.sqltools.disableChordKeybindings && !terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+a",
    "command": "-sqltools.runFromBookmarks",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+d",
    "command": "sqltools.describeTable",
    "when": "!config.sqltools.disableChordKeybindings && !terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+d",
    "command": "-sqltools.describeTable",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+e",
    "command": "sqltools.executeQuery",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+e",
    "command": "-sqltools.executeQuery",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+s",
    "command": "sqltools.showRecords",
    "when": "!config.sqltools.disableChordKeybindings && !terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+s",
    "command": "-sqltools.showRecords",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+h",
    "command": "sqltools.runFromHistory",
    "when": "!config.sqltools.disableChordKeybindings && !terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+h",
    "command": "-sqltools.runFromHistory",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+b",
    "command": "sqltools.formatSql",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !editorReadonly && !terminalFocus"
  },
  {
    "key": "ctrl+e ctrl+b",
    "command": "-sqltools.formatSql",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !editorReadonly"
  },
  {
    "key": "ctrl+e",
    "command": "-extension.vim_ctrl+e",
    "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
  },
  {
    "key": "ctrl+e",
    "command": "editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown && !terminalFocus"
  },
  {
    "key": "ctrl+e",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen && !terminalFocus"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  }
]